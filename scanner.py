from flask import Flask, request, jsonify
from flask_cors import CORS  # Import CORS
import requests

app = Flask(__name__)
CORS(app)  # Enable CORS for all routes

# Security headers to check for
security_headers = {
    'Content-Security-Policy': 'Mitigates XSS by specifying trusted sources of content',
    'X-Content-Type-Options': 'Prevents MIME-sniffing',
    'X-Frame-Options': 'Prevents clickjacking',
    'Strict-Transport-Security': 'Forces HTTPS usage, preventing SSL stripping',
    'X-XSS-Protection': 'Enables XSS filtering in browsers',
}

@app.route('/scan', methods=['GET'])
def scan():
    url = request.args.get('url')

    if not url:
        return "Please provide a valid URL.", 400

    try:
        # Perform the HTTP GET request to the target URL
        response = requests.get(url)
        response.raise_for_status()
    except requests.exceptions.RequestException as e:
        return f"Error occurred while scanning: {e}", 500

    # Initialize missing headers list
    missing_headers = []
    for header, description in security_headers.items():
        if header not in response.headers:
            missing_headers.append(f"- {header}: {description}")

    # Build the result message
    result_message = f"Scanning {url} complete.\n"

    if missing_headers:
        result_message += "Missing security headers:\n" + "\n".join(missing_headers)
    else:
        result_message += "No missing security headers found."

    return result_message, 200

if __name__ == '__main__':
    app.run(debug=True)




